<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Anne&#39;s Blog</title>
    <link>https://annieblog.netlify.com/post/</link>
    <description>Recent content in Posts on Anne&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Powered by [Hugo](http://gohugo.io).</copyright>
    <lastBuildDate>Mon, 30 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://annieblog.netlify.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bar Plots</title>
      <link>https://annieblog.netlify.com/post/bar-plots/</link>
      <pubDate>Mon, 30 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://annieblog.netlify.com/post/bar-plots/</guid>
      <description>Our data visualization lessons will wrap up with a lesson on bar plots!
Like always, load the packages.
library(Lahman)library(sqldf)library(ggplot2)Bar plots are useful when you want to show different levels of attributes or factors. The example we will use will look at MLB teams in 1980s and their team homerun totals.
query&amp;lt;-&amp;quot;SELECT name,HR FROM Teams WHERE yearID=1980 ORDER BY HR&amp;quot;result&amp;lt;-sqldf(query)result$name&amp;lt;-factor(result$name,levels=result$name)The last line is something new. We need to add this line to save the information as a factor which tells it to order the data in the order we want and not by the systems default.</description>
    </item>
    
    <item>
      <title>Histograms</title>
      <link>https://annieblog.netlify.com/post/histograms/</link>
      <pubDate>Sun, 29 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://annieblog.netlify.com/post/histograms/</guid>
      <description>Next, we have histograms. Histograms are used to depict the amount and shape of a single set of data.
Load those packages!
library(Lahman)library(sqldf)library(ggplot2)Below, we will be using the example of MLB players and looking at their weight. We get this information from the Lahman database and with the help of the Master table.
query&amp;lt;-&amp;quot;SELECT weight FROM Master&amp;quot;result&amp;lt;-sqldf(query)Now we will turn the extracted data into a visualization in the form of a histogram!</description>
    </item>
    
    <item>
      <title>Time Series</title>
      <link>https://annieblog.netlify.com/post/time-series/</link>
      <pubDate>Sun, 29 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://annieblog.netlify.com/post/time-series/</guid>
      <description>Welcome back! This time we are going to work on time series. A time series lets you put two sets of data to each other but one must be a variable of time.
Remember, load your packages.
library(Lahman)library(sqldf)library(ggplot2)This time we will extract data about Babe Ruthâ€™s homeruns over his twenty-two seasons.
query&amp;lt;-&amp;quot;SELECT yearID,HR FROM Batting WHERE playerID=&amp;#39;ruthba01&amp;#39;&amp;quot;result&amp;lt;-sqldf(query)Here we will make our time series visualization. Unlike the scatterplot, the data will be shown as lines, connecting to each point for easy reading throughout the years.</description>
    </item>
    
    <item>
      <title>Scatterplots</title>
      <link>https://annieblog.netlify.com/post/scatterplots/</link>
      <pubDate>Fri, 27 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://annieblog.netlify.com/post/scatterplots/</guid>
      <description>Our first lesson is on scatterplots! Here, we will take data on homeruns and strikeouts to make a scatterplot. The data will be extracted from the Lahman database of baseball statistics to make our product.
However, before we start, load the following packages below to make sure the computer knows which data to pull out.
library(Lahman)library(sqldf)library(ggplot2)Now, specify what information we are looking to show. Here, we are looking for career homeruns and strikeouts from players who had more than 400 homeruns.</description>
    </item>
    
  </channel>
</rss>